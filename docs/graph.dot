digraph {
    rankdir=LR
    subgraph cluster_0 {
        label = ""
        subgraph cluster_1 {
            label = "extract users from CSV"
            subgraph cluster_2 {
                label = "extract users from CSV/read text file"
                subgraph cluster_3 {
                    label = "extract users from CSV/read text file/Read"
                    4 [label="Impulse"]
                    subgraph cluster_5 {
                        label = "extract users from CSV/read text file/Read/ParDo(OutputSingleSource)"
                        6 [label="ParMultiDo(OutputSingleSource)"]
                        4 -> 6 [style=solid label=""]
                    }
                    subgraph cluster_7 {
                        label = "extract users from CSV/read text file/Read/ParDo(BoundedSourceAsSDFWrapper)"
                        8 [label="ParMultiDo(BoundedSourceAsSDFWrapper)"]
                        6 -> 8 [style=solid label=""]
                    }
                }
            }
            subgraph cluster_9 {
                label = "extract users from CSV/parse csv"
                subgraph cluster_10 {
                    label = "extract users from CSV/parse csv/csvToRow"
                    subgraph cluster_11 {
                        label = "extract users from CSV/parse csv/csvToRow/FlatMap"
                        12 [label="ParMultiDo(Anonymous)"]
                        8 -> 12 [style=solid label=""]
                    }
                }
            }
        }
        subgraph cluster_13 {
            label = "generate user sequence"
            subgraph cluster_14 {
                label = "generate user sequence/key by id"
                subgraph cluster_15 {
                    label = "generate user sequence/key by id/AddKeys"
                    subgraph cluster_16 {
                        label = "generate user sequence/key by id/AddKeys/Map"
                        17 [label="ParMultiDo(Anonymous)"]
                        12 -> 17 [style=solid label=""]
                    }
                }
            }
            subgraph cluster_18 {
                label = "generate user sequence/View.AsMap"
                subgraph cluster_19 {
                    label = "generate user sequence/View.AsMap/View.VoidKeyToMultimapMaterialization"
                    subgraph cluster_20 {
                        label = "generate user sequence/View.AsMap/View.VoidKeyToMultimapMaterialization/ParDo(VoidKeyToMultimapMaterialization)"
                        21 [label="ParMultiDo(VoidKeyToMultimapMaterialization)"]
                        17 -> 21 [style=solid label=""]
                    }
                }
                22 [label="View.CreatePCollectionView"]
                21 -> 22 [style=solid label=""]
            }
            subgraph cluster_23 {
                label = "generate user sequence/generate sequence"
                subgraph cluster_24 {
                    label = "generate user sequence/generate sequence/Read(UnboundedCountingSource)"
                    25 [label="Impulse"]
                    subgraph cluster_26 {
                        label = "generate user sequence/generate sequence/Read(UnboundedCountingSource)/ParDo(OutputSingleSource)"
                        27 [label="ParMultiDo(OutputSingleSource)"]
                        25 -> 27 [style=solid label=""]
                    }
                    subgraph cluster_28 {
                        label = "generate user sequence/generate sequence/Read(UnboundedCountingSource)/ParDo(UnboundedSourceAsSDFWrapper)"
                        29 [label="ParMultiDo(UnboundedSourceAsSDFWrapper)"]
                        27 -> 29 [style=solid label=""]
                    }
                    subgraph cluster_30 {
                        label = "generate user sequence/generate sequence/Read(UnboundedCountingSource)/ParDo(StripIds)"
                        31 [label="ParMultiDo(StripIds)"]
                        29 -> 31 [style=solid label=""]
                    }
                }
            }
            subgraph cluster_32 {
                label = "generate user sequence/create row from side input"
                33 [label="ParMultiDo(Anonymous)"]
                31 -> 33 [style=solid label=""]
                21 -> 33 [style=dashed label=""]
            }
        }
        subgraph cluster_34 {
            label = "users window"
            35 [label="Window.Assign"]
            33 -> 35 [style=solid label=""]
        }
        subgraph cluster_36 {
            label = "extract projects from CSV"
            subgraph cluster_37 {
                label = "extract projects from CSV/read text file"
                subgraph cluster_38 {
                    label = "extract projects from CSV/read text file/Read"
                    39 [label="Impulse"]
                    subgraph cluster_40 {
                        label = "extract projects from CSV/read text file/Read/ParDo(OutputSingleSource)"
                        41 [label="ParMultiDo(OutputSingleSource)"]
                        39 -> 41 [style=solid label=""]
                    }
                    subgraph cluster_42 {
                        label = "extract projects from CSV/read text file/Read/ParDo(BoundedSourceAsSDFWrapper)"
                        43 [label="ParMultiDo(BoundedSourceAsSDFWrapper)"]
                        41 -> 43 [style=solid label=""]
                    }
                }
            }
            subgraph cluster_44 {
                label = "extract projects from CSV/parse csv"
                subgraph cluster_45 {
                    label = "extract projects from CSV/parse csv/csvToRow"
                    subgraph cluster_46 {
                        label = "extract projects from CSV/parse csv/csvToRow/FlatMap"
                        47 [label="ParMultiDo(Anonymous)"]
                        43 -> 47 [style=solid label=""]
                    }
                }
            }
        }
        subgraph cluster_48 {
            label = "generate project sequence"
            subgraph cluster_49 {
                label = "generate project sequence/key by id"
                subgraph cluster_50 {
                    label = "generate project sequence/key by id/AddKeys"
                    subgraph cluster_51 {
                        label = "generate project sequence/key by id/AddKeys/Map"
                        52 [label="ParMultiDo(Anonymous)"]
                        47 -> 52 [style=solid label=""]
                    }
                }
            }
            subgraph cluster_53 {
                label = "generate project sequence/View.AsMap"
                subgraph cluster_54 {
                    label = "generate project sequence/View.AsMap/View.VoidKeyToMultimapMaterialization"
                    subgraph cluster_55 {
                        label = "generate project sequence/View.AsMap/View.VoidKeyToMultimapMaterialization/ParDo(VoidKeyToMultimapMaterialization)"
                        56 [label="ParMultiDo(VoidKeyToMultimapMaterialization)"]
                        52 -> 56 [style=solid label=""]
                    }
                }
                57 [label="View.CreatePCollectionView"]
                56 -> 57 [style=solid label=""]
            }
            subgraph cluster_58 {
                label = "generate project sequence/generate sequence"
                subgraph cluster_59 {
                    label = "generate project sequence/generate sequence/Read(UnboundedCountingSource)"
                    60 [label="Impulse"]
                    subgraph cluster_61 {
                        label = "generate project sequence/generate sequence/Read(UnboundedCountingSource)/ParDo(OutputSingleSource)"
                        62 [label="ParMultiDo(OutputSingleSource)"]
                        60 -> 62 [style=solid label=""]
                    }
                    subgraph cluster_63 {
                        label = "generate project sequence/generate sequence/Read(UnboundedCountingSource)/ParDo(UnboundedSourceAsSDFWrapper)"
                        64 [label="ParMultiDo(UnboundedSourceAsSDFWrapper)"]
                        62 -> 64 [style=solid label=""]
                    }
                    subgraph cluster_65 {
                        label = "generate project sequence/generate sequence/Read(UnboundedCountingSource)/ParDo(StripIds)"
                        66 [label="ParMultiDo(StripIds)"]
                        64 -> 66 [style=solid label=""]
                    }
                }
            }
            subgraph cluster_67 {
                label = "generate project sequence/create row from side input"
                68 [label="ParMultiDo(Anonymous)"]
                66 -> 68 [style=solid label=""]
                56 -> 68 [style=dashed label=""]
            }
        }
        subgraph cluster_69 {
            label = "projects window"
            70 [label="Window.Assign"]
            68 -> 70 [style=solid label=""]
        }
        subgraph cluster_71 {
            label = "join on users"
            subgraph cluster_72 {
                label = "join on users/CoGroup.ExpandCrossProduct"
                subgraph cluster_73 {
                    label = "join on users/CoGroup.ExpandCrossProduct/extractKeylhs"
                    74 [label="ParMultiDo(Anonymous)"]
                    70 -> 74 [style=solid label=""]
                }
                subgraph cluster_75 {
                    label = "join on users/CoGroup.ExpandCrossProduct/extractKeyrhs"
                    76 [label="ParMultiDo(Anonymous)"]
                    35 -> 76 [style=solid label=""]
                }
                subgraph cluster_77 {
                    label = "join on users/CoGroup.ExpandCrossProduct/CoGroupByKey"
                    subgraph cluster_78 {
                        label = "join on users/CoGroup.ExpandCrossProduct/CoGroupByKey/MakeUnionTable0"
                        79 [label="ParMultiDo(ConstructUnionTable)"]
                        74 -> 79 [style=solid label=""]
                    }
                    subgraph cluster_80 {
                        label = "join on users/CoGroup.ExpandCrossProduct/CoGroupByKey/MakeUnionTable1"
                        81 [label="ParMultiDo(ConstructUnionTable)"]
                        76 -> 81 [style=solid label=""]
                    }
                    82 [label="Flatten.PCollections"]
                    79 -> 82 [style=solid label=""]
                    81 -> 82 [style=solid label=""]
                    83 [label="GroupByKey"]
                    82 -> 83 [style=solid label=""]
                    subgraph cluster_84 {
                        label = "join on users/CoGroup.ExpandCrossProduct/CoGroupByKey/ConstructCoGbkResultFn"
                        85 [label="ParMultiDo(ConstructCoGbkResult)"]
                        83 -> 85 [style=solid label=""]
                    }
                }
                subgraph cluster_86 {
                    label = "join on users/CoGroup.ExpandCrossProduct/ParDo(ConvertCoGbkResult)"
                    87 [label="ParMultiDo(ConvertCoGbkResult)"]
                    85 -> 87 [style=solid label=""]
                }
            }
        }
        subgraph cluster_88 {
            label = "log"
            89 [label="ParMultiDo(Writer)"]
            87 -> 89 [style=solid label=""]
        }
        subgraph cluster_90 {
            label = "experiment"
        }
    }
}
